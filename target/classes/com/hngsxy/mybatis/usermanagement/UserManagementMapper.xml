<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace：必须与对应的接口全类名一致 id:必须与对应接口的某个对应的方法名一致 -->
<mapper namespace="com.hngsxy.mybatis.usermanagement.UserManagementMapper">
	
	<!-- 查询所有部门 -->
	<select id="findDept" resultType="Dept">
		SELECT * 
		FROM gsxy_dept
		ORDER BY deptSort
	</select>
	
	<!-- 查询所有部门 用于用户table的操作-->
	<select id="findDeptTable" resultType="Dept" parameterType="map">
		SELECT * 
		FROM gsxy_dept
		WHERE noSHow = 0 AND pId = #{deptno} AND showv = '1'
		<include refid="deptName_sql"></include>
		<![CDATA[
		LIMIT #{page},#{limit}
		]]>
	</select>
	
	<!-- 查询用户文件01 -->
	<select id="findDeptTableTotal" parameterType="map" resultType="int">
		<![CDATA[
		SELECT COUNT(1)
		FROM gsxy_dept
		WHERE noSHow = 0 AND pId = #{deptno} AND showv = '1'
		]]>
		<include refid="deptName_sql"></include>
	</select>
	<!-- 模糊查询文件-1 -->
	<sql id="deptName_sql">
		<if test="dname!=null and dname!=''">
		AND dname like '%${dname}%'
		</if>
	</sql>
	<!-- 新增部门 -->
	<insert id="insertDept" parameterType="Dept">
		INSERT INTO gsxy_dept
		(`deptno`,`dname`,`pId`,`showv`,`noshow`)
		VALUES
		(LEFT(UUID(),8),#{dname},#{deptno},'1','0')
	</insert>
	<!-- 修改部门信息 -->
	<update id="updateDept" parameterType="Dept">
		UPDATE gsxy_dept SET dname = #{dname}
		WHERE deptno = #{deptno}
	</update>
	
	<!-- 删除部门 -->
	<delete id="deleteDept" parameterType="Dept">
		DELETE FROM gsxy_dept 
		WHERE deptno = #{deptno}
	</delete>
	
	<!-- 查询所有部门 用于用户table的操作-->
	<select id="findUserTable" resultType="User" parameterType="map">
		SELECT userId,userCode,userName,idCard,userAge,LEFT(userEntryTime,10) userEntryTime,deptno
		FROM gsxy_user
		WHERE deptno = #{deptno}
		<include refid="userCode_sql"></include>
		<![CDATA[
		LIMIT #{page},#{limit}
		]]>
	</select>
	<!-- 查询用户文件01 -->
	<select id="findUserTableTotal" parameterType="map" resultType="int">
		<![CDATA[
		SELECT COUNT(1)
		FROM gsxy_user
		WHERE deptno = #{deptno}
		]]>
		<include refid="userCode_sql"></include>
	</select>
	<!-- 模糊查询文件-2 -->
	<sql id="userCode_sql">
		<if test="userCode!=null and userCode!=''">
		AND userCode like '%${userCode}%'
		</if>
	</sql>
	
	<!-- 新增用户 -->
	<insert id="insertUser" parameterType="User">
		INSERT INTO
		gsxy_user
		(`userName`,`userCode`,`userPassword`,`userAge`,`salt`,`userEntryTime`,`deptno`,`userGender`,`showv`,`idCard`)
		VALUES
		(#{userName},#{userCode},#{userPassword},#{userAge},LEFT(UUID(),8),#{userEntryTime},#{deptno},#{userGender},'2',#{idCard})
	</insert>
	
	<!-- 用于判断用户是否存在 -->
	<select id="findUserIfExistence" parameterType="String" resultType="int">
		<![CDATA[
		SELECT COUNT(1)
		FROM `gsxy_user` 
		WHERE userCode = #{userCode}
		]]>
	</select>
	
	<!-- 修改用户名字 -->
	<update id="updateUserCode" parameterType="User">
		UPDATE `gsxy_user` SET userName = #{userName},idCard = #{idCard},userPhone = #{userPhone},userAge = #{userAge}
		WHERE userId = #{userId}
	</update>
	<!-- 删除用户 -->
	<delete id="deleteUser" parameterType="User">
		DELETE FROM `gsxy_user`
		WHERE userId =  #{userId}
	</delete>
	<!-- 批量删除用户 -->
	<delete id="deleteBatchUser">
		DELETE FROM `gsxy_user`
		WHERE userId IN
		    <foreach collection="userIds" index="index" item="userIds" open="(" separator="," close=")">  
		            #{userIds}
		    </foreach>   
	</delete>
	<!-- 查询要删除的部门下有多少员工 -->
	<select id="selectDeptInUserIfExistence" parameterType="String" resultType="int">
		SELECT COUNT(1)
		FROM gsxy_user
		WHERE deptno = #{deptno}
	</select>
	<!-- 查询角色 -->
	<select id="findGsxyRole" resultType="GsxyRole">
		SELECT * FROM gsxy_role
	</select>
	
	<!-- 给用户角色 -->
	<insert id="insertUserRole" parameterType="map">
		INSERT INTO 
		`gsxy_user_role`
		(`userId`,`roleId`) 
		VALUES 
		(#{userId},#{roleId})
	</insert>
	
	<!-- 查询所有部门用于人员调度 -->
	<select id="findDeptUserMoveDept" resultType="Dept">
		SELECT * FROM gsxy_dept
		WHERE showv ='1'
	</select>
	<!-- 人员部门调度 -->
	<update id="updateUserDept" parameterType="User">
		UPDATE gsxy_user SET deptno = #{deptno}
		WHERE userId = #{userId}
	</update>
	
	<!-- 查询用户角色 -->
	<select id="findUserGsxyRole" resultType="GsxyRole">
		SELECT * 
		FROM gsxy_role
		WHERE roleId IN (SELECT DISTINCT(roleId)
		FROM gsxy_user_role
		WHERE userId = #{userId})
	</select>
	<!-- 删除用户角色 -->
	<delete id="deleteGsxyUserRole" parameterType="String">
		DELETE FROM gsxy_user_role
		WHERE userId = #{userId}
	</delete>
	<!-- 查询部门名称 -->
	<select id="findUserIdByDept" parameterType="Dept"  resultType="Dept">
		SELECT *
		FROM gsxy_dept
		WHERE deptno = #{deptno}
	</select>
	
	<!-- 初始化密码 -->
	<update id="initializationPassword" parameterType="User">
		UPDATE gsxy_user SET userPassword = '123456'
		WHERE userId = #{userId}
	</update>
	
	<!-- 通过用户ID查询用户部门 -->

	
</mapper>